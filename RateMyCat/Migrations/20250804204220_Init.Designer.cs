// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RateMyCat.Data;

#nullable disable

namespace RateMyCat.Migrations
{
    [DbContext(typeof(RateMyCatContext))]
    [Migration("20250804204220_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RateMyCat.Models.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("RateMyCat.Models.CatPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatParts");
                });

            modelBuilder.Entity("RateMyCat.Models.CatRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<int?>("CatPartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("CatPartId");

                    b.HasIndex("UserId");

                    b.ToTable("CatRatings");
                });

            modelBuilder.Entity("RateMyCat.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RateMyCat.Models.Cat", b =>
                {
                    b.HasOne("RateMyCat.Models.User", "Owner")
                        .WithMany("Cats")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RateMyCat.Models.CatRating", b =>
                {
                    b.HasOne("RateMyCat.Models.Cat", "Cat")
                        .WithMany("CatRatings")
                        .HasForeignKey("CatId");

                    b.HasOne("RateMyCat.Models.CatPart", "CatPart")
                        .WithMany()
                        .HasForeignKey("CatPartId");

                    b.HasOne("RateMyCat.Models.User", "User")
                        .WithMany("CatRatings")
                        .HasForeignKey("UserId");

                    b.Navigation("Cat");

                    b.Navigation("CatPart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RateMyCat.Models.Cat", b =>
                {
                    b.Navigation("CatRatings");
                });

            modelBuilder.Entity("RateMyCat.Models.User", b =>
                {
                    b.Navigation("CatRatings");

                    b.Navigation("Cats");
                });
#pragma warning restore 612, 618
        }
    }
}
